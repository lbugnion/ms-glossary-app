@using MsGlossaryApp.DataModel;
@page "/personal-notes"
@inject SynopsisClient.Model.SynopsisHandler Handler

<h1>Personal notes</h1>

@if (_notes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <tbody>
            @foreach (var note in _notes)
            {
                <tr>
                    <td><InputText @bind-Value="note.Content" /></td>
                    <td><button @onclick="(e => Delete(note))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<NoteWrapper> _notes;

    protected override async Task OnInitializedAsync()
    {
        var synopsis = await Handler.GetSynopsis(false);
        _notes = new List<NoteWrapper>();

        if (synopsis.PersonalNotes != null)
        {
            foreach (var note in synopsis.PersonalNotes)
            {
                _notes.Add(new NoteWrapper(synopsis, note));
            }
        }
    }

    private void Delete(NoteWrapper note)
    {
        // TODO Add confirmation dialog
        note.DeleteInSynopsis();
        _notes.Remove(note);
    }

    public class NoteWrapper
    {
        private Synopsis _synopsis;

        private string _content;

        public string Content
        {
            get
            {
                return _content;
            }

            set
            {
                if (_content != value)
                {
                    var index = _synopsis.PersonalNotes.IndexOf(_content);
                    if (index > -1)
                    {
                        _synopsis.PersonalNotes[index] = value;

                        foreach (var note in _synopsis.PersonalNotes)
                        {
                            Console.WriteLine(note);
                        }
                    }

                    _content = value;
                }
            }
        }

        public NoteWrapper(Synopsis synopsis, string note)
        {
            _synopsis = synopsis;
            _content = note;
        }

        public void DeleteInSynopsis()
        {
            var index = _synopsis.PersonalNotes.IndexOf(_content);
            if (index > -1)
            {
                _synopsis.PersonalNotes.RemoveAt(index);
            }
        }
    }
}
