{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each": {
                "actions": {
                    "Copy_blob": {
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/datasets/default/copyFile",
                            "queries": {
                                "destination": "/backups/@{variables('BackupFolderName')}/Settings/@{items('For_each')?['Name']}",
                                "overwrite": true,
                                "queryParametersSingleEncoded": true,
                                "source": "@items('For_each')?['Path']"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('List_blobs')?['value']",
                "runAfter": {
                    "List_blobs": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "For_each_2": {
                "actions": {
                    "Copy_blob_2": {
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/datasets/default/copyFile",
                            "queries": {
                                "destination": "/backups/@{variables('BackupFolderName')}/terms/@{items('For_each_2')?['Name']}",
                                "overwrite": true,
                                "queryParametersSingleEncoded": true,
                                "source": "@items('For_each_2')?['Path']"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('List_blobs_2')?['value']",
                "runAfter": {
                    "List_blobs_2": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "For_each_3": {
                "actions": {
                    "Copy_blob_3": {
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/datasets/default/copyFile",
                            "queries": {
                                "destination": "/backups/@{variables('BackupFolderName')}/captions/@{items('For_each_3')?['Name']}",
                                "overwrite": true,
                                "queryParametersSingleEncoded": true,
                                "source": "@items('For_each_3')?['Path']"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('List_blobs_3')?['value']",
                "runAfter": {
                    "List_blobs_3": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "HTTP": {
                "inputs": {
                    "body": {
                        "body": "Backup for settings, terms and captions was successfully created at @{variables('BackupFolderName')}",
                        "channel": "MSGlossary",
                        "title": "Backup created"
                    },
                    "headers": {
                        "x-functions-key": "CfPYAamajXsaZQiFOk3CaLxFnDEKThXDnt86NWimMi5O2Gw8yeIK/Q=="
                    },
                    "method": "POST",
                    "uri": "https://notificationsendpoint.azurewebsites.net/api/send"
                },
                "runAfter": {
                    "For_each_3": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "HTTP_2": {
                "inputs": {
                    "body": {
                        "body": "Error when creating backup for settings, terms and captions at @{variables('BackupFolderName')}",
                        "channel": "MSGlossary",
                        "title": "Backup was NOT created"
                    },
                    "headers": {
                        "x-functions-key": "CfPYAamajXsaZQiFOk3CaLxFnDEKThXDnt86NWimMi5O2Gw8yeIK/Q=="
                    },
                    "method": "POST",
                    "uri": "https://notificationsendpoint.azurewebsites.net/api/send"
                },
                "runAfter": {
                    "For_each_3": [
                        "Failed",
                        "Skipped",
                        "TimedOut"
                    ]
                },
                "type": "Http"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "BackupFolderName",
                            "type": "string",
                            "value": "@{utcNow(utcNow(utcNow(utcNow())))}"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "List_blobs": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmc2V0dGluZ3M='))}",
                    "queries": {
                        "useFlatListing": true
                    }
                },
                "metadata": {
                    "JTJmc2V0dGluZ3M=": "/settings"
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "List_blobs_2": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmdGVybXM='))}",
                    "queries": {
                        "useFlatListing": true
                    }
                },
                "metadata": {
                    "JTJmdG9waWNz": "/topics",
                    "JTJmdGVybXM=": "/terms"
                },
                "runAfter": {
                    "For_each": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "List_blobs_3": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmY2FwdGlvbnM='))}",
                    "queries": {
                        "nextPageMarker": "",
                        "useFlatListing": true
                    }
                },
                "metadata": {
                    "JTJmY2FwdGlvbnM=": "/captions"
                },
                "runAfter": {
                    "For_each_2": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Recurrence": {
                "recurrence": {
                    "frequency": "Hour",
                    "interval": 24
                },
                "type": "Recurrence"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureblob_1": {
                    "connectionId": "/subscriptions/6e69cf24-0859-4dec-84e2-695e2618e473/resourceGroups/msglossary/providers/Microsoft.Web/connections/azureblob-1",
                    "connectionName": "azureblob-1",
                    "id": "/subscriptions/6e69cf24-0859-4dec-84e2-695e2618e473/providers/Microsoft.Web/locations/westeurope/managedApis/azureblob"
                }
            }
        }
    }
}